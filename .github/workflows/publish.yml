name: Build
# Build the ESPHome firmwares for the S0tool project.
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  release:
    types: [published]

env:
  RELEASE_URL: ${{ github.server_url }}/${{ github.repository }}/releases/latest
  FIRMWARES: |
    myESPhome

jobs:
  build:
    name: ðŸ”¨ Build ${{ matrix.firmware.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        firmware:
          - file: esphome/luxmeter.yaml
            name: "myesphome-luxmeter "
            manifest_filename: myesphome-luxmeter-manifest.json
        #  - file: esphome/luxmeter_1.yaml
        #    name: myesphome-luxmeter1
        #    manifest_filename: myesphome-luxmeter1-manifest.json
          
      fail-fast: false
      
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Read version from YAML file
        id: read_version
        run: |
          project_version=$(grep 'project_version:' esphome/package/basis.yaml | awk '{print $2}' | tr -d '"')
          echo "project_version=$project_version" >> $GITHUB_ENV

      - name: ðŸ”¨ Build firmware ðŸ”¨
        uses: esphome/build-action@v4.0.2
        with:
          yaml-file: ${{ matrix.firmware.file }}
          version: 2024.8.3
        id: esphome-build
  

      - name: ðŸ”¨ Copy firmware and manifest ðŸ”¨
        run: |
          mkdir output
          mv ${{ steps.esphome-build.outputs.name }} output/
          jq -s "{\"name\": \"${{ matrix.firmware.name }}\", \"version\": \"${{ env.project_version }}\", \"home_assistant_domain\": \"esphome\", \"new_install_prompt_erase\": false, \"builds\":.}" output/${{ steps.esphome-build.outputs.name }}/manifest.json > output/${{ matrix.firmware.manifest_filename }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: ${{ matrix.firmware.name }}
          path: output

  consolidate:
    # if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    name: ðŸ”¨ Consolidate firmwares ðŸ”¨ 
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Download built firmwares
        uses: actions/download-artifact@v4
        with:
          path: firmwares
      - name: Copy files
        run: |-
          mkdir output
          cp -R static/* output/
          cp -R firmwares/*/* output/
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: output
  
  build-site:
    name: ðŸ”¨ Build Site ðŸ”¨
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4.1.7
      - name: Build
        uses: actions/jekyll-build-pages@v1.0.13
        with:
          source: ./static
          destination: ./output
      - name: Upload
        uses: actions/upload-artifact@v4.3.6
        with:
          name: site
          path: output

  deploy:
    #if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main')
    name: ðŸš€ Deploy to GitHub Pages ðŸš€
    runs-on: ubuntu-latest
    needs: 
          - consolidate
          - build-site
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5